group="com.seakg.bottlefs.core"
apply plugin: 'groovy'
apply plugin: 'application'
// apply plugin: 'gradle-one-jar'

dependencies {
  compile localGroovy()
//  compile "org.codehaus.groovy:groovy-all:2.3.6"
  compile 'net.sf.ehcache:ehcache:2.8.1'
  compile 'commons-io:commons-io:1.4'
  compile 'org.json:json:20090211'
  compile "org.apache.lucene:lucene-core:4.3.1"
  compile "org.apache.lucene:lucene-analyzers-common:4.3.1"
  compile "ch.qos.logback:logback-classic:1.1.2"
  testCompile "junit:junit:4.+"
}

repositories {
  mavenLocal()
  mavenCentral()  
}

jar {
    manifest {
        attributes 'Main-Class': 'com.seakg.bottlefs.Server'
    }
}

[compileJava,compileTestJava,compileGroovy,compileTestGroovy]*.options*.encoding = 'UTF-8'

// mainClassName = 'com.seakg.bottlefs.WebServer'

def getVersion() {
    def command = """git rev-list HEAD --count ."""
    def version = command.execute(null, rootProject.getProjectDir()).in.text.trim().toInteger()
    return version
}


task printVersion() {  
  println("version: " + getProject().getName() + "-v"+ getVersion())
}

task makezip(type:Zip) {
	description 'Create release as zip-archive to build/distributions/' + getProject().getName() + '-' + getVersion() + '.zip'

	doFirst {
		File tmpFolder = new File(getProject().getProjectDir(), 'build/tmp');
		tmpFolder.mkdirs();
		
		File batchCmd = new File(tmpFolder.getAbsolutePath(), 'run.bat')
		batchCmd.withWriter { out ->
			out.writeLine("@echo off")
			out.writeLine("java -Dfile.encoding=UTF-8 -cp \"libs/*\" com.seakg.bottlefs.Server config.d %1 %2 %3 %4 %5")
		}
		File batchSh = new File(tmpFolder, 'run.sh')
		batchSh.withWriter { out ->
			out.writeLine("#!/bin/sh")
			out.writeLine("java -Dfile.encoding=UTF-8 -cp 'libs/*' com.seakg.bottlefs.Server config.d \$@")
		}
		batchSh.setExecutable(true, false);
		from batchCmd
		from batchSh
		
		File bottle1 = new File(tmpFolder.getAbsolutePath(), 'bottle1.properties')
		bottle1.withWriter { out ->
			out.writeLine('''
# base
name=bottle1
port=8086

# trusted ip-servers
trusted.ip=*

# config for file-storage and index
files.index.directory=bottle1_index
files.directory=bottle1_files

# config for metadata
metadata.textfields=someid,someid2,someid3
''')
		}

		from (bottle1) { into 'config.d' }
			
		File bottle2 = new File(tmpFolder.getAbsolutePath(), 'bottle2.properties')
		bottle2.withWriter { out ->
			out.writeLine('''
# base
name=bottle2
port=8087

# trusted ip-servers
trusted.ip=127.0.0.1

# config for file-storage and index
files.index.directory=bottle2_index
files.directory=bottle2_files

# config for metadata
metadata.textfields=someid,someid2,someid3
''')
		}
		
		from (bottle2) { into 'config.d' }
	}  

	// libs
	from (jar.outputs.files) { into 'libs' }
	from (configurations.compile) { into 'libs' }
	from new File(getRootDir(), "../LICENSE")
	from new File(getRootDir(), "../README.md")
}

//create a single Jar with all dependencies
task buildFatJar(type: Jar) {
  def version = getVersion();
	manifest {
    attributes 'Main-Class': 'com.seakg.bottlefs.Server'
  }
  baseName = project.name + '-all'
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}
